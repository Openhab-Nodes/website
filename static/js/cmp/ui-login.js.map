{"version":3,"file":"ui-login.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../../assets/js/ui-login/cmp.svelte","../../../assets/js/ui-login/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  export let lang;\n  export let redirect_url = \"\";\n  let firebase;\n  let email_signin = false;\n  let email_signup = false;\n  let email = \"\";\n  let password = \"\";\n  let password_repeat = \"\";\n  let first_lastname = \"\";\n  let error_message = null;\n  let loading = false;\n  let mode = \"\";\n  let locked_redirect = false;\n  let unreg_auth_listener;\n  export let legal_link_new_tab = false;\n\n  import { onDestroy } from \"svelte\";\n  onDestroy(() => {\n   if (unreg_auth_listener) unreg_auth_listener();\n      unreg_auth_listener = null;\n  });\n\n  $: langpath = lang == \"en\" ? \"\" : \"/\" + lang;\n  $: tosUrl = langpath + \"/terms\";\n  $: privacyPolicyUrl = langpath + \"/privacy\";\n\n  const redirect = new URL(window.location).searchParams.get(\"redirect\");\n\n  function determine_redirect_url(redirect_url) {\n    if (redirect) return window.location.origin + decodeURIComponent(redirect);\n    if (redirect_url != null) {\n      if (redirect_url.startsWith(\"/dashboard\")) {\n        return (\n          window.location.origin + langpath + decodeURIComponent(redirect_url)\n        );\n      } else {\n        return window.location.origin + decodeURIComponent(redirect_url);\n      }\n    }\n    return redirect_url;\n  }\n\n  $: successURL = determine_redirect_url(redirect_url);\n  $: signInOptions = [\n    {\n      p: firebase ? firebase.auth.GoogleAuthProvider : null,\n      i: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\",\n      c: \"google\",\n      t: \"Google\"\n    },\n    {\n      p: firebase ? firebase.auth.GithubAuthProvider : null,\n      i: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/github.svg\",\n      c: \"github\",\n      t: \"Github\"\n    },\n    {\n      p: firebase ? firebase.auth.EmailAuthProvider : null,\n      i: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/mail.svg\",\n      c: \"email\",\n      t: \"email\"\n    }\n  ];\n  // {p:firebase.auth.GoogleAuthProvider.PROVIDER_ID,i:\"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/facebook.svg\"},\n  // {p:firebase.auth.GoogleAuthProvider.PROVIDER_ID,i:\"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/twitter.svg\"},\n\n  async function start() {\n    let module = await import(\"/js/cmp/userdata.js\");\n    firebase = module.firebase;\n    if (unreg_auth_listener) unreg_auth_listener();\n    unreg_auth_listener = firebase.auth().onAuthStateChanged(\n      user => {\n        if (user && !locked_redirect) {\n          setTimeout(perform_redirect, 200);\n        }\n      },\n      error => {\n        console.log(error);\n        error_message = error.message;\n      }\n    );\n  }\n  start();\n\n  function perform_redirect() {\n    if (!successURL) return;\n\n    // Create redirect url. Use successURL as base and copy over other search parameters\n    const params = new URL(window.location).searchParams;\n    let target = new URL(successURL);\n    for (let p of params.entries()) {\n      if (p[0] !== \"redirect\") continue;\n      target.searchParams.append(p[0], p[1]);\n    }\n    window.location.assign(target);\n  }\n\n  function email_create_account(e) {\n    e.preventDefault();\n    if (first_lastname.trim().length == 0) {\n      error_message =\n        \"No first and lastname set. We will only use your name to write you nice to read email greeting lines.\";\n      return;\n    }\n    if (password != password_repeat) {\n      error_message = \"Your passwords don't match.\";\n      return;\n    }\n    loading = true;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(user => {\n        return user.updateProfile({\n          displayName: first_lastname\n        });\n      })\n      .then(perform_redirect)\n      .catch(error => {\n        loading = false;\n        error_message = error.message; // .code\n      });\n  }\n  function signin_with_email(e) {\n    e.preventDefault();\n    loading = true;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        loading = false;\n        error_message = error.message;\n      });\n  }\n  function signin(e, item) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (item.c === \"email\") {\n      mode = \"email_signin\";\n    } else {\n      loading = true;\n      firebase\n        .auth()\n        .signInWithPopup(new item.p())\n        .catch(error => {\n          loading = false;\n          error_message = error.message;\n        });\n    }\n  }\n  function emailsignup(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    loading = false;\n    mode = \"email_signup\";\n    error_message = null;\n  }\n  function back_to_sign_in() {\n    loading = false;\n    mode = \"email_signin\";\n    error_message = null;\n  }\n</script>\n\n<style>\n  .firebaseui-idp-email,\n  .firebaseui-idp-email:hover,\n  .firebaseui-idp-email:active,\n  .firebaseui-idp-email:focus {\n    background-color: #db4437;\n    color: white;\n  }\n\n  .firebaseui-idp-phone,\n  .firebaseui-idp-phone:hover,\n  .firebaseui-idp-phone:active,\n  .firebaseui-idp-phone:focus {\n    background-color: #02bd7e;\n    color: white;\n  }\n\n  .firebaseui-idp-google,\n  .firebaseui-idp-google:hover,\n  .firebaseui-idp-google:active,\n  .firebaseui-idp-google:focus {\n    background-color: #fff;\n    color: black;\n  }\n\n  .firebaseui-idp-github,\n  .firebaseui-idp-github:hover,\n  .firebaseui-idp-github:active,\n  .firebaseui-idp-github:focus {\n    background-color: #333;\n    color: white;\n  }\n\n  .firebaseui-idp-facebook,\n  .firebaseui-idp-facebook:hover,\n  .firebaseui-idp-facebook:active,\n  .firebaseui-idp-facebook:focus {\n    background-color: #3b5998;\n  }\n\n  .firebaseui-idp-twitter,\n  .firebaseui-idp-twitter:hover,\n  .firebaseui-idp-twitter:active,\n  .firebaseui-idp-twitter:focus {\n    background-color: #55acee;\n  }\n\n  .firebaseui-idp-anonymous,\n  .firebaseui-idp-anonymous:hover,\n  .firebaseui-idp-anonymous:active,\n  .firebaseui-idp-anonymous:focus {\n    background-color: #f4b400;\n  }\n\n  .centered {\n    margin: auto;\n    max-width: 300px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 300px;\n    align-items: center;\n    margin: auto;\n  }\n\n  .container button img {\n    max-width: 20px;\n  }\n\n  .container button {\n    display: flex;\n    align-items: center;\n  }\n\n  .container button span {\n    flex: 1;\n  }\n</style>\n\n{#if mode == 'email_signin'}\n  <form class=\"centered\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email address</label>\n      <input\n        bind:value={email}\n        type=\"email\"\n        autocomplete=\"email\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n        placeholder=\"Enter email\" />\n      <small id=\"emailHelp\" class=\"form-text text-muted\">\n        We'll never share your email with anyone else.\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input\n        bind:value={password}\n        type=\"password\"\n        class=\"form-control\"\n        autocomplete=\"current-password\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"Password\" />\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary mr-3\"\n      on:click={signin_with_email}>\n      Sign In\n    </button>\n    No account yet?\n    <a href=\"/login#\" on:click={emailsignup}>Sign Up</a>\n    {#if error_message}\n      <div class=\"text-danger mt-3\">{error_message}</div>\n    {/if}\n  </form>\n{:else if mode == 'email_signup'}\n  <form class=\"centered\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email address</label>\n      <input\n        bind:value={email}\n        type=\"email\"\n        class=\"form-control\"\n        autocomplete=\"email\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n        placeholder=\"Enter email\" />\n      <small id=\"emailHelp\" class=\"form-text text-muted\">\n        We'll never share your email with anyone else.\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input\n        bind:value={password}\n        type=\"password\"\n        autocomplete=\"new-password\"\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n        placeholder=\"Password\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword2\">Repeat Password</label>\n      <input\n        bind:value={password_repeat}\n        type=\"password\"\n        autocomplete=\"new-password\"\n        class=\"form-control\"\n        id=\"exampleInputPassword2\"\n        placeholder=\"Password\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"signupname\">First & Last Name</label>\n      <input\n        bind:value={first_lastname}\n        class=\"form-control\"\n        id=\"signupname\"\n        placeholder=\"First & Last Name\" />\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary mr-3\"\n      on:click={email_create_account}>\n      Create Account\n    </button>\n    <a href=\"/login#\" on:click={back_to_sign_in}>Back</a>\n    {#if error_message}\n      <div class=\"text-danger mt-3\">{error_message}</div>\n    {/if}\n  </form>\n{:else}\n  <form onsubmit=\"return false;\" class=\"container\">\n    {#each signInOptions as item}\n      <button\n        disabled={loading}\n        class=\"btn btn-primary firebaseui-idp-{item.c} mb-3 w-100\"\n        on:click={e => signin(e, item)}>\n        <img alt=\"\" src={item.i} />\n        <span>Sign in with {item.t}</span>\n      </button>\n    {/each}\n    {#if error_message}\n      <div class=\"text-danger mt-3\">{error_message}</div>\n    {/if}\n    <small>\n      By continuing, you are indicating that you accept our\n      <a href={tosUrl} target={legal_link_new_tab ? '_blank' : ''}>\n        Terms of Service\n      </a>\n      and\n      <a href={privacyPolicyUrl} target={legal_link_new_tab ? '_blank' : ''}>\n        Privacy Policy\n      </a>\n      .\n    </small>\n  </form>\n{/if}\n","import Cmp from './cmp.svelte';\n\nwindow.customElements.define('ui-login', class extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        this.cmp = new Cmp({\n            target: this, props: {\n                redirect_url: this.hasAttribute(\"no-redirect\") ? null : (this.getAttribute(\"redirecturl\") || \"/dashboard\"),\n                lang: this.hasAttribute(\"lang\") ? this.getAttribute(\"lang\") : \"en\",\n                legal_link_new_tab: this.hasAttribute(\"legal-link-new-tab\")\n            }\n        });\n    }\n    disconnectedCallback() {\n        if (this.cmp) this.cmp.$destroy();\n    }\n});\n"],"names":["noop","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","globals","window","global","make_dirty","key","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","on_mount","context","Map","callbacks","ready","block","local","hydrate","l","Array","from","childNodes","c","intro","delete","m","new_on_destroy","map","filter","mount_component","SvelteComponent","[object Object]","detaching","this","d","$destroy","type","index","indexOf","splice","SvelteComponentDev","$$inline","super","console","warn","signInOptions","tosUrl","legal_link_new_tab","privacyPolicyUrl","error_message","iterations","email_create_account","back_to_sign_in","email","password","password_repeat","first_lastname","signin_with_email","emailsignup","item","t","loading","click_handler","mode","locked_redirect","firebase","unreg_auth_listener","lang","redirect_url","redirect","URL","location","searchParams","get","perform_redirect","successURL","params","entries","assign","signin","e","stopPropagation","preventDefault","auth","signInWithPopup","catch","error","message","async","module","import","onAuthStateChanged","user","setTimeout","log","start","langpath","origin","decodeURIComponent","startsWith","determine_redirect_url","GoogleAuthProvider","GithubAuthProvider","EmailAuthProvider","trim","createUserWithEmailAndPassword","updateProfile","displayName","signInWithEmailAndPassword","customElements","define","HTMLElement","cmp","Cmp","hasAttribute","getAttribute"],"mappings":"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"}