{"version":3,"file":"ui-subscription.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../../assets/js/ui-subscription/currency.svelte","../../../assets/js/ui-subscription/iban.svelte","../../../assets/js/ui-subscription/refcode.js","../../../assets/js/ui-subscription/invoices.svelte","../../../assets/js/ui-subscription/markdown.js","../../../assets/js/ui-subscription/subscription_plan.svelte","../../../assets/js/ui-subscription/cmp.svelte","../../../assets/js/ui-subscription/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  export let value = 0;\n  export let currency = \"€\";\n  let output = 0;\n  let currencies = { \"€\": 1.0 };\n  let cache_date = null;\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  $: result = (currencies[currency] * value).toFixed(2);\n  $: dispatch('output', currencies[currency] * value);\n\n  async function fetchRates() {\n    let rates = localStorage.getItem(\"currency_rates\");\n    if (rates) rates = JSON.parse(rates);\n    // Older than a day\n    if (!rates || Date.parse(rates.date) < Date.now() - 3600 * 24 * 1000) {\n      console.log(\"Fetch currency rates\");\n      rates = await (await fetch(\n        \"https://api.exchangeratesapi.io/latest\"\n      )).json();\n      rates.rates[\"€\"] = 1.0;\n      localStorage.setItem(\"currency_rates\", JSON.stringify(rates));\n    }\n    cache_date = rates.date;\n    rates.rates[\"€\"] = 1.0;\n    delete rates.rates.EUR;\n    currencies = rates.rates;\n  }\n\n  fetchRates();\n</script>\n\n<output title=\"Cached from {cache_date}\">{result}</output>\n<select\n  title=\"Cached from {cache_date}\"\n  class=\"custom-select custom-select-sm\"\n  style=\"width:100px\"\n  on:change={e=>dispatch('currency', currency)}\n  bind:value={currency}>\n  {#each Object.keys(currencies) as title}\n    <option value={title} selected={currency == title}>{title}</option>\n  {/each}\n</select>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import CurrencyConverter from \"./currency.svelte\";\n  export let value = 0;\n  export let currency = \"€\";\n  export let refcode;\n</script>\n\n<samp class=\"card p-3 mb-4\">\n  <table>\n    <tr>\n      <td>Account Holder:&nbsp;</td>\n      <td>David Graeff</td>\n    </tr>\n    <tr>\n      <td>IBAN:</td>\n      <td>DE78 2004 1155 0841 2900 00</td>\n    </tr>\n    <tr>\n      <td>BIC:</td>\n      <td>COBADEHD055</td>\n    </tr>\n    <tr>\n      <td>Reference Code:</td>\n      <td>{refcode}</td>\n    </tr>\n    <tr>\n      <td>Amount:</td>\n      <td>\n        <CurrencyConverter\n          {value}\n          bind:currency\n          on:output={e => dispatch('output', e.detail)} />\n      </td>\n    </tr>\n  </table>\n</samp>\n","export default function refcode(user, start_date) {\n    return `OHX-${user.email.replace(\"@\", \"/\")}-${Math.floor(\n        start_date.getFullYear() / 100\n      )}${(\"\" + start_date.getMonth()).padStart(2, \"0\")}`;\n}","<script>\n  import Iban from \"./iban.svelte\";\n  import RefCode from './refcode.js';\n\n  export let userdata;\n  export let user;\n  $: storage = userdata ? userdata.storage(userdata.BUCKET_BILLING) : null;\n  let cache_valid_until = null;\n  let invoices = [];\n  let last_pm = null;\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  function bill_status_text(status_code) {\n    switch (status_code) {\n      case \"PENDING\":\n        return \"Waiting for Payment\";\n      case \"RECEIVED\":\n        return \"Received\";\n      case \"SCHEDULED\":\n        return \"Recurring Payment scheduled\";\n      default:\n        return status_code;\n    }\n  }\n\n  function prepare_download_link(e, bill) {\n    if (new URL(e.target.href).hash != \"#top\") return;\n    e.preventDefault();\n    const gsReference = storage.refFromURL(\n      userdata.BUCKET_BILLING + \"/\" + user.uid + \"/\" + bill.id\n    );\n    gsReference\n      .getDownloadURL()\n      .then(link => {\n        e.target.href = link;\n        e.target.click();\n      })\n      .catch(err => {\n        if (err.code == \"storage/object-not-found\") {\n          dispatch(\"error\", `PDF for Invoice #${bill.id} not found!`);\n        } else {\n          console.warn(\"Failed to create download link\", err);\n          dispatch(\"error\", \"Failed to create download link \" + err.message);\n        }\n      });\n  }\n\n  async function get_invoice_list() {\n    let list = localStorage.getItem(\"invoices\");\n    if (list) list = JSON.parse(list);\n    if (list && list.valid_until > Date.now()) {\n      cache_valid_until = list.valid_until;\n      invoices = Object.values(list.data);\n      return;\n    }\n    await userdata\n      .fetch_collection(userdata.COLL_INVOICES)\n      .then(() => {\n        const list = userdata[userdata.COLL_INVOICES] || [];\n        let d = new Date(Date.now());\n        d.setDate(d.getDate() + 1);\n        localStorage.setItem(\n          \"invoices\",\n          JSON.stringify({ data: list, valid_until: d.getTime() })\n        );\n        invoices = Object.values(list);\n      })\n      .catch(err => {\n        dispatch(\"error\", `Failed to refresh invoice list: ${err.message}`);\n      });\n    const pm = invoices.length ? invoices[invoices.length - 1] : null;\n    if (pm && pm.payment_method == \"IBAN\" && pm.status == \"PENDING\") last_pm = pm;\n  }\n\n  function refresh_cache() {\n    cache_valid_until = null;\n    localStorage.removeItem(\"invoices\");\n    get_invoice_list();\n  }\n\n  $: if (user) get_invoice_list();\n\n  function demoadd(e) {\n    e.preventDefault();\n    invoices.push({\n      id: \"12\",\n      type: \"cloud\",\n      start: Date.now(),\n      end: Date.now(),\n      payment_method: \"IBAN\",\n      payment_lastdigits: \"0879\",\n      status: \"PENDING\",\n      status_date: Date.now(),\n      amount_euro: \"3\"\n    });\n    invoices = invoices;\n    const pm = invoices.length ? invoices[invoices.length - 1] : null;\n    if (pm && pm.payment_method == \"IBAN\" && pm.status == \"PENDING\") last_pm = pm;\n  }\n</script>\n\n<h4 class=\"mt-4\">\n  Invoice History\n  <span class=\"h6\">\n    <a href=\"#top\" on:click={refresh_cache}>Refresh</a>\n    {#if user && user.is_admin}\n      |\n      <a href=\"#top\" on:click={demoadd}>Add Demo Invoice</a>\n    {/if}\n  </span>\n</h4>\n\n{#if last_pm}\n<p>Your last invoice balance is negative. The IBAN details are printed below.</p>\n  <Iban value={last_pm.amount_euro} currency=\"€\" refcode={RefCode(user, new Date(last_pm.start))} />\n{/if}\n\n<table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>No</th>\n      <th>Type</th>\n      <th>Access Period</th>\n      <th>Payment Method</th>\n      <th>Status</th>\n      <th>Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    {#each invoices as bill}\n      <tr>\n        <td>\n          <a\n            href=\"#top\"\n            title=\"Download Invoice\"\n            on:click={e => prepare_download_link(e, bill)}>\n            #{bill.id}\n          </a>\n        </td>\n        <td>{bill.type}</td>\n        <td>\n          {new Date(parseInt(bill.start)).toLocaleString()} - {new Date(parseInt(bill.end)).toLocaleString()}\n        </td>\n        <td>{bill.payment_method} &hellip;{bill.payment_lastdigits}</td>\n        <td class:text-danger={bill.status==\"PENDING\"}>\n          {bill_status_text(bill.status)}\n          {#if bill.status_date}\n            {new Date(parseInt(bill.status_date)).toLocaleString()}\n          {/if}\n        </td>\n        <td>{bill.amount_euro}</td>\n      </tr>\n    {:else}\n      <tr>\n        <td colspan=\"6\">No entry</td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n","/**\n * https://github.com/developit/snarkdown\n * License: MIT, Author: Jason Miller\n */\nconst TAGS = {\n\t'' : ['<em>','</em>'],\n\t_ : ['<strong>','</strong>'],\n\t'~' : ['<s>','</s>'],\n\t'\\n' : ['<br />'],\n\t' ' : ['<br />'],\n\t'-': ['<hr />']\n};\n\n/** Outdent a string based on the first indented line's leading whitespace\n *\t@private\n */\nfunction outdent(str) {\n\treturn str.replace(RegExp('^'+(str.match(/^(\\t| )+/) || '')[0], 'gm'), '');\n}\n\n/** Encode special attribute characters to HTML entities in a String.\n *\t@private\n */\nfunction encodeAttr(str) {\n\treturn (str+'').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\n/** Parse Markdown into an HTML String. */\nexport default function parse(md, prevLinks) {\n\tlet tokenizer = /((?:^|\\n+)(?:\\n---+|\\* \\*(?: \\*)+)\\n)|(?:^``` *(\\w*)\\n([\\s\\S]*?)\\n```$)|((?:(?:^|\\n+)(?:\\t|  {2,}).+)+\\n*)|((?:(?:^|\\n)([>*+-]|\\d+\\.)\\s+.*)+)|(?:\\!\\[([^\\]]*?)\\]\\(([^\\)]+?)\\))|(\\[)|(\\](?:\\(([^\\)]+?)\\))?)|(?:(?:^|\\n+)([^\\s].*)\\n(\\-{3,}|={3,})(?:\\n+|$))|(?:(?:^|\\n+)(#{1,6})\\s*(.+)(?:\\n+|$))|(?:`([^`].*?)`)|(  \\n\\n*|\\n{2,}|__|\\*\\*|[_*]|~~)/gm,\n\t\tcontext = [],\n\t\tout = '',\n\t\tlinks = prevLinks || {},\n\t\tlast = 0,\n\t\tchunk, prev, token, inner, t;\n\n\tfunction tag(token) {\n\t\tvar desc = TAGS[token.replace(/\\*/g,'_')[1] || ''],\n\t\t\tend = context[context.length-1]==token;\n\t\tif (!desc) return token;\n\t\tif (!desc[1]) return desc[0];\n\t\tcontext[end?'pop':'push'](token);\n\t\treturn desc[end|0];\n\t}\n\n\tfunction flush() {\n\t\tlet str = '';\n\t\twhile (context.length) str += tag(context[context.length-1]);\n\t\treturn str;\n\t}\n\n\tmd = md.replace(/^\\[(.+?)\\]:\\s*(.+)$/gm, (s, name, url) => {\n\t\tlinks[name.toLowerCase()] = url;\n\t\treturn '';\n\t}).replace(/^\\n+|\\n+$/g, '');\n\n\twhile ( (token=tokenizer.exec(md)) ) {\n\t\tprev = md.substring(last, token.index);\n\t\tlast = tokenizer.lastIndex;\n\t\tchunk = token[0];\n\t\tif (prev.match(/[^\\\\](\\\\\\\\)*\\\\$/)) {\n\t\t\t// escaped\n\t\t}\n\t\t// Code/Indent blocks:\n\t\telse if (token[3] || token[4]) {\n\t\t\tchunk = '<pre class=\"code '+(token[4]?'poetry':token[2].toLowerCase())+'\">'+outdent(encodeAttr(token[3] || token[4]).replace(/^\\n+|\\n+$/g, ''))+'</pre>';\n\t\t}\n\t\t// > Quotes, -* lists:\n\t\telse if (token[6]) {\n\t\t\tt = token[6];\n\t\t\tif (t.match(/\\./)) {\n\t\t\t\ttoken[5] = token[5].replace(/^\\d+/gm, '');\n\t\t\t}\n\t\t\tinner = parse(outdent(token[5].replace(/^\\s*[>*+.-]/gm, '')));\n\t\t\tif (t==='>') t = 'blockquote';\n\t\t\telse {\n\t\t\t\tt = t.match(/\\./) ? 'ol' : 'ul';\n\t\t\t\tinner = inner.replace(/^(.*)(\\n|$)/gm, '<li>$1</li>');\n\t\t\t}\n\t\t\tchunk = '<'+t+'>' + inner + '</'+t+'>';\n\t\t}\n\t\t// Images:\n\t\telse if (token[8]) {\n\t\t\tchunk = `<img src=\"${encodeAttr(token[8])}\" alt=\"${encodeAttr(token[7])}\">`;\n\t\t}\n\t\t// Links:\n\t\telse if (token[10]) {\n\t\t\tout = out.replace('<a>', `<a href=\"${encodeAttr(token[11] || links[prev.toLowerCase()])}\">`);\n\t\t\tchunk = flush() + '</a>';\n\t\t}\n\t\telse if (token[9]) {\n\t\t\tchunk = '<a>';\n\t\t}\n\t\t// Headings:\n\t\telse if (token[12] || token[14]) {\n\t\t\tt = 'h' + (token[14] ? token[14].length : (token[13][0]==='='?1:2));\n\t\t\tchunk = '<'+t+'>' + parse(token[12] || token[15], links) + '</'+t+'>';\n\t\t}\n\t\t// `code`:\n\t\telse if (token[16]) {\n\t\t\tchunk = '<code>'+encodeAttr(token[16])+'</code>';\n\t\t}\n\t\t// Inline formatting: *em*, **strong** & friends\n\t\telse if (token[17] || token[1]) {\n\t\t\tchunk = tag(token[17] || '--');\n\t\t}\n\t\tout += prev;\n\t\tout += chunk;\n\t}\n\n\treturn (out + md.substring(last) + flush()).trim();\n}","<script>\n  export let plan = {};\n  export let user = {};\n  export let selected = false;\n  import snarkdown from \"./markdown.js\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  $: button_text = !plan.euro_price_value\n    ? \"Free\"\n    : plan.euro_price_value + \" € / Month\";\n\n  function prop_value(prop, minmax, cost) {\n    if (!minmax.min) return prop.base;\n    const range = minmax.max - minmax.min;\n    const lrange = prop.max - prop.base;\n    return prop.base + Math.floor(lrange * ((cost - minmax.min) / range));\n  }\n\n  function select_plan(e, plan_id) {\n    e.target.disabled = true;\n    e.preventDefault();\n    dispatch(\"select\", plan_id);\n  }\n</script>\n\n<style>\n  .plans {\n    display: grid;\n    grid-template-columns: 33% 33% 33%;\n    grid-gap: 10px;\n  }\n</style>\n\n<form class=\"col\" id=\"subscriptionPlan{plan.id}\" class:active={selected}>\n  {#if plan.euro_price.min}\n    <ui-subscription-flexible target=\"subscriptionPlan{plan.id}\" />\n  {/if}\n  <input\n    type=\"hidden\"\n    name=\"c\"\n    value={plan.euro_price.min ? plan.euro_price.min : plan.euro_price} />\n  <input type=\"hidden\" name=\"p\" value={plan.id} />\n  <div class=\"header\">\n    <h4>\n      {@html snarkdown(plan.title)}\n    </h4>\n    <i class=\"img {plan.icon}\" style=\"font-size: 60pt;line-height: 120pt;\" />\n  </div>\n  <p class=\"text-center p-2\">\n    {@html snarkdown(plan.desc)}\n  </p>\n  <div class=\"mx-4 mb-2 table table-sm\">\n    <table>\n      <tbody>\n        {#each Object.entries(plan.properties) as [$propid, $prop]}\n          <tr>\n            <td>\n              <output data-min={$prop.base} data-max={$prop.max} name={$propid}>\n                {prop_value($prop, plan.euro_price, plan.euro_price_value)}\n              </output>\n              {#if $prop.suffix}{$prop.suffix}{/if}\n            </td>\n            <td>\n              {#if $prop.details_html_tag}\n                <ui-tooltip maxwidth>\n                  <button\n                    class=\"btn-link contexthelp\"\n                    title=\"Context help\"\n                    slot=\"button\">\n                    {@html snarkdown($prop.title)}\n                  </button>\n                  {@html `<${$prop.details_html_tag} value=${prop_value($prop, plan.euro_price, plan.euro_price_value)}></${$prop.details_html_tag}>`}\n                </ui-tooltip>\n              {:else}\n                {@html snarkdown($prop.title)}\n              {/if}\n              {#if $prop.desc}\n                <br />\n                <small>\n                  {@html snarkdown($prop.desc)}\n                </small>\n              {/if}\n            </td>\n          </tr>\n        {/each}\n        <tr>\n          <td>&check;</td>\n          <td class=\"plans_feat_compact\">\n            {#each plan.features as $feat, $featid}\n              {#if $feat.details}\n                <ui-tooltip maxwidth>\n                  <button\n                    class=\"btn-link contexthelp\"\n                    title=\"Context help\"\n                    slot=\"button\">\n                    {@html snarkdown($feat.title)}\n                  </button>\n                  {@html snarkdown($feat.details)}\n                </ui-tooltip>\n              {:else}\n                <span>\n                  {@html snarkdown($feat.title)}\n                  {#if $feat.desc}\n                    &nbsp;\n                    {@html '(' + snarkdown($feat.desc) + ')'}\n                  {/if}\n                </span>\n              {/if}\n            {/each}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"text-center mb-3\">\n    {#if plan.euro_price.min}\n      <input\n        type=\"range\"\n        min={plan.euro_price.min}\n        max={plan.euro_price.max}\n        bind:value={plan.euro_price_value}\n        class=\"slider\"\n        id=\"subscriptionValue\" />\n    {/if}\n    {#if selected}\n      <button disabled class=\"btn btn-success btn-impressive\">\n        {button_text}\n      </button>\n    {:else}\n      <button\n        class=\"btn btn-primary btn-impressive\"\n        on:click={e => select_plan(e, plan.id)}>\n        {button_text}\n      </button>\n    {/if}\n  </div>\n</form>\n","<script>\n  import Invoices from \"./invoices.svelte\";\n  import CurrencyConverter from \"./currency.svelte\";\n  import SubscriptionPlan from \"./subscription_plan.svelte\";\n  import Iban from \"./iban.svelte\";\n\n  let error_message = null;\n  let error_message_braintree = null;\n  let fetchWithAuth;\n  let mode = \"plans\";\n  let plans = [];\n  let summary = { recurring: false };\n\n  // Braintree\n  let payment_instance;\n  let braintree_container;\n\n  export let classes = \"\";\n\n  /// User Aware Component\n  import { onDestroy } from \"svelte\";\n  let user = null;\n  let data = {};\n  let actionqueue = null;\n  let onDestroyProxy = () => {};\n  let userdb = null;\n  onDestroy(() => onDestroyProxy());\n\n  async function start() {\n    const temp = await (await fetch(\"/run/subscriptions.json\")).json();\n    for (let plan of temp) {\n      if (!plan.euro_price) plan.euro_price = 0;\n      plan.euro_price_value = plan.euro_price.min\n        ? plan.euro_price.min\n        : plan.euro_price;\n    }\n    plans = temp;\n\n    const module = await import(\"/js/cmp/userdata.js\");\n    onDestroyProxy = module.UserAwareComponent(\n      user_ => (user = user_),\n      data_ => (data = data_),\n      aq_ => (actionqueue = aq_)\n    );\n    userdb = module.userdata;\n    fetchWithAuth = module.fetchWithAuth;\n  }\n  start().catch(err => {\n    console.warn(\"Failed to request client token!\", err);\n    error_message = \"Failed to request client token! \" + err.message;\n  });\n  /// End -- User Aware Component\n\n  async function start_braintree(change_plan) {\n    const module = await import(\"/js/cmp/payment.js\");\n    let braintree = module.braintree;\n    fetchWithAuth(\"subscription.openhabx.com/clienttoken\")\n      .then(json => {\n        if (!json.client_token)\n          throw new Error(\"Response does not contain a client token!\");\n        const opts = {\n          authorization: json.client_token,\n          container: braintree_container,\n          paypal: {\n            flow: \"vault\"\n          },\n          preselectVaultedPaymentMethod: true\n        };\n        braintree.create(opts, (err, dropinInstance) => {\n          if (err) {\n            error_message_braintree = err.message;\n            console.error(err);\n            return;\n          }\n          payment_instance = dropinInstance;\n        });\n      })\n      .catch(err => {\n        console.warn(\"Failed to request client token!\", err);\n        error_message_braintree =\n          \"Failed to request client token! \" + err.message;\n      });\n\n    return {\n      destroy() {}\n    };\n  }\n\n  function confirm_iban(e) {\n    mode = \"confirmation\";\n  }\n\n  function confirm(e) {\n    payment_instance.requestPaymentMethod((err, payload) => {\n      if (err) {\n        error_message = err.message;\n        console.error(err);\n        return;\n      }\n      fetchWithAuth(\n        \"subscription.openhabx.com/confirm\",\n        \"POST\",\n        JSON.stringify(payload)\n      ).catch(err => {\n        console.warn(\"Failed to request client token!\", err);\n        error_message = \"Failed to request client token! \" + err.message;\n      });\n    });\n  }\n\n  import RefCode from \"./refcode.js\";\n\n  function select_plan(e) {\n    let plan = plans.find(p => p.id == e.detail);\n    summary.plan = plan;\n    summary.start =\n      data.subscription && data.subscription.ends\n        ? data.subscription.ends\n        : Date.now();\n    const d = new Date();\n    d.setDate(d.getDate() + 30);\n    summary.end = d.getTime();\n    summary.user_currency = \"€\";\n    summary.user_currency_value = plan.euro_price_value;\n    const start_date = new Date(summary.start);\n    summary.refcode = RefCode(user, start_date);\n\n    mode = \"options\";\n  }\n\n  function demo_subscribed() {}\n</script>\n\n<style>\n  .stats {\n    display: grid;\n    grid-template-columns: minmax(100px, 300px) 1fr;\n    grid-gap: 10px;\n  }\n</style>\n\n{#if mode == 'confirmation'}\n  asd\n{:else if mode == 'checkout'}\n  <tab-container>\n    <tab-header>\n      <tab-header-item class=\"tab-active\">\n        IBAN Bank Account Transfer\n      </tab-header-item>\n      <tab-header-item>PayPal, Credit Card</tab-header-item>\n    </tab-header>\n    <tab-body>\n      <tab-body-item>\n        <p>\n          An IBAN (Swift) transaction usually takes about 1 and up to 3 business\n          days, but will save transaction and payment gateway fees. To\n          compensate for the non-instant IBAN experience, your subscription\n          status will still be upgraded\n          <b>immediately</b>\n          as with other payment options.\n        </p>\n        <p>\n          Please perform the bank transfer in the near future though. The\n          account is automatically checked every 24 hours (\n          <a\n            href=\"https://github.com/openhab-nodes/cloud-subscriptions\"\n            target=\"_blank\">\n            check the source code\n          </a>\n          ).\n        </p>\n        <Iban\n          value={summary.plan.euro_price_value}\n          refcode={summary.refcode}\n          bind:currency={summary.user_currency}\n          on:output={e => (summary.user_currency_value = e.detail)} />\n        <div>\n          <button class=\"btn btn-secondary\" on:click={e => (mode = 'options')}>\n            Back\n          </button>\n          <button class=\"btn btn-primary\" on:click={confirm_iban}>\n            Finish Checkout &amp; Send confirmation Mail\n          </button>\n        </div>\n      </tab-body-item>\n      <tab-body-item>\n        <div bind:this={braintree_container} use:start_braintree />\n        {#if error_message_braintree}\n          <p class=\"text-danger\">{error_message_braintree}</p>\n        {/if}\n\n        <div>\n          <button class=\"btn btn-secondary\" on:click={e => (mode = 'options')}>\n            Back\n          </button>\n          <button class=\"btn btn-primary\" on:click={confirm}>\n            Finish Checkout &amp; Send confirmation Mail\n          </button>\n        </div>\n      </tab-body-item>\n    </tab-body>\n  </tab-container>\n{:else if mode == 'options'}\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <p>Subscription Type: {summary.plan ? summary.plan.title : ''}</p>\n      <div\n        style=\"display: grid;grid-auto-flow: column; grid-auto-columns:\n        300px;grid-gap:20px\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"options\"\n            bind:group={summary.recurring}\n            value={false} />\n          One Month -\n          <b>{summary.user_currency_value.toFixed(2)}{summary.user_currency}</b>\n          <br />\n          <small>\n            Period: {new Date(parseInt(summary.start)).toLocaleDateString()} - {new Date(parseInt(summary.end)).toLocaleDateString()}\n          </small>\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"options\"\n            bind:group={summary.recurring}\n            value={true} />\n          Recurring* -\n          <b>\n            {summary.user_currency_value.toFixed(2)}{summary.user_currency} /\n            month\n          </b>\n          <br />\n          <small>\n            Start: {new Date(parseInt(summary.start)).toLocaleDateString()}\n          </small>\n        </label>\n      </div>\n      <p class=\"small\">* You can cancel the subscription on a monthly base.</p>\n      <p>\n        (~\n        <CurrencyConverter\n          value={summary.plan.euro_price_value}\n          bind:currency={summary.user_currency}\n          on:output={e => (summary.user_currency_value = e.detail)} />\n        )\n      </p>\n\n      {#if summary.plan.euro_price_value > 3}\n        <p>\n          Your financial contribution will greatly help to add more exiting\n          stuff to this project. Thanks.\n        </p>\n      {/if}\n      <p>\n        <label>\n          <input type=\"checkbox\" name=\"agb\" bind:checked={summary.agb} />\n          You accept our\n          <a href=\"/terms\" target=\"_blank\">Terms Of Service</a>\n        </label>\n      </p>\n      <div>\n        <button class=\"btn btn-secondary\" on:click={e => (mode = 'plans')}>\n          Back\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          on:click={e => (mode = 'checkout')}\n          disabled={!summary.agb}>\n          Continue to Checkout\n        </button>\n      </div>\n    </div>\n  </div>\n{:else if mode == 'plans'}\n  <div id=\"plans\" class=\"row\">\n    {#each plans as plan}\n      <SubscriptionPlan\n        {plan}\n        {user}\n        on:select={select_plan}\n        selected={data && data.subscription && data.subscription.plan ? data.subscription.plan == plan.id : plan.id == 'free'} />\n    {/each}\n  </div>\n\n  <h4 class=\"mt-4\">Account</h4>\n  <div class=\"card mt-4\">\n    <div class=\"card-body stats\">\n      <span>Accumulated Influence Points</span>\n      <span>{data && data.influence_points ? data.influence_points : 0}</span>\n    </div>\n  </div>\n\n  <Invoices\n    userdata={userdb}\n    {user}\n    on:error={e => (error_message = e.detail)} />\n{/if}\n\n{#if error_message}\n  <p class=\"text-danger\">{error_message}</p>\n{/if}\n","import Cmp from './cmp.svelte';\n\nwindow.customElements.define('ui-subscription', class extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        const classes = this.getAttribute(\"class\");\n        this.removeAttribute(\"class\");\n        this.cmp = new Cmp({ target: this, props: { classes } });\n    }\n    disconnectedCallback() {\n        if (this.cmp) this.cmp.$destroy();\n    }\n});\n\n"],"names":["noop","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_custom_element_data","prop","set_data","set_style","key","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","HtmlTag","[object Object]","html","this","e","u","n","t","innerHTML","Array","from","childNodes","m","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","createEventDispatcher","type","detail","callbacks","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","global","bind","props","indexOf","bound","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","context","Map","ready","hydrate","l","intro","SvelteComponent","$destroy","index","splice","SvelteComponentDev","$$inline","super","console","warn","title","currency","keys","currencies","result","cache_date","€","dispatch","async","rates","localStorage","getItem","JSON","parse","Date","date","now","log","fetch","json","setItem","stringify","EUR","fetchRates","toFixed","selected_option","querySelector","refcode","user","start_date","email","replace","Math","floor","getFullYear","getMonth","padStart","demoadd","last_pm","amount_euro","RefCode","start","parseInt","bill","status_date","toLocaleString","id","end","payment_method","payment_lastdigits","bill_status_text","status","click_handler","is_admin","invoices","refresh_cache","status_code","userdata","cache_valid_until","prepare_download_link","URL","href","hash","preventDefault","storage","refFromURL","BUCKET_BILLING","uid","getDownloadURL","link","click","catch","err","code","message","get_invoice_list","list","valid_until","values","fetch_collection","COLL_INVOICES","setDate","getDate","getTime","pm","removeItem","$$invalidate","TAGS","_","~","\n"," ","-","outdent","str","RegExp","match","encodeAttr","md","prevLinks","chunk","prev","token","inner","tokenizer","out","links","last","tag","desc","s","url","toLowerCase","exec","substring","lastIndex","trim","plan","$prop","suffix","snarkdown","details_html_tag","prop_value","euro_price","euro_price_value","base","max","$propid","$feat","details","min","button_text","entries","properties","features","icon","minmax","cost","range","lrange","select_plan","plan_id","disabled","undefined","influence_points","plans","userdb","summary","user_currency_value","user_currency","toLocaleDateString","agb","recurring","confirm_iban","confirm","error_message_braintree","subscription","error_message","mode","fetchWithAuth","payment_instance","braintree_container","classes","actionqueue","onDestroyProxy","temp","module","import","UserAwareComponent","user_","data_","aq_","change_plan","braintree","client_token","opts","authorization","container","paypal","flow","preselectVaultedPaymentMethod","dropinInstance","error","requestPaymentMethod","payload","find","ends","customElements","define","HTMLElement","getAttribute","cmp","Cmp"],"mappings":"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"}