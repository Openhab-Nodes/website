{"version":3,"file":"bind-to-input.js","sources":["../../../assets/js/bind-to-input/index.js"],"sourcesContent":["\nwindow.customElements.define('bind-input', class extends HTMLElement {\n    constructor() {\n        super();\n        this.binder = {};\n    }\n\n    async connectedCallback() {\n        this.inputid = this.getAttribute(\"inputid\");\n        this.input = document.getElementById(this.inputid);\n        this.targetid = this.getAttribute(\"targetid\");\n        this.target = document.getElementById(this.targetid);\n\n        const props = this.hasAttribute(\"props\") ? this.getAttribute(\"props\").split(\",\") : [];\n        for (const prop of props) {\n            const [src, dest] = prop.split(\":\");\n            if (this.input[src] === undefined) {\n                console.warn(\"Source does not have property with name\", src, this.input);\n                continue;\n            }\n            this.target[dest] = this.input[src];\n        }\n\n        const events = this.getAttribute(\"events\").split(\",\");\n        for (const event of events) {\n            const [eventname, bindkey, use_detail] = event.split(\":\");\n            const t = this.target[bindkey];\n            if (t === undefined) {\n                console.warn(\"Target does not have property with name\", bindkey, t);\n                continue;\n            }\n            this.binder[event] = (e) => {\n                // if a custom event -> set the property of the target to the event \"detail\"\n                let value = e.target.value;\n\n                if (use_detail !== undefined) {\n                    value = e.detail;\n                } else if (e.target.type === \"radio\" || e.target.type === \"checkbox\") {\n                    value = e.target.checked;\n                }\n                if (typeof t === \"function\")\n                    t(value);\n                else\n                    this.target[bindkey] = value;\n            }\n            this.input.addEventListener(eventname, this.binder[event]);\n        }\n    }\n    disconnectedCallback() {\n        for (const event of Object.keys(this.binder)) {\n            const [eventname, bindkey] = event.split(\":\");\n            this.input.removeEventListener(eventname, this.binder[event]);\n        }\n        this.binder = {};\n    }\n});\n"],"names":["window","customElements","define","HTMLElement","[object Object]","super","this","binder","inputid","getAttribute","input","document","getElementById","targetid","target","props","hasAttribute","split","prop","src","dest","undefined","console","warn","events","event","eventname","bindkey","use_detail","t","e","value","detail","type","checked","addEventListener","Object","keys","removeEventListener"],"mappings":"AACAA,OAAOC,eAAeC,OAAO,aAAc,cAAcC,YACrDC,cACIC,QACAC,KAAKC,OAAS,GAGlBH,0BACIE,KAAKE,QAAUF,KAAKG,aAAa,WACjCH,KAAKI,MAAQC,SAASC,eAAeN,KAAKE,SAC1CF,KAAKO,SAAWP,KAAKG,aAAa,YAClCH,KAAKQ,OAASH,SAASC,eAAeN,KAAKO,UAE3C,MAAME,EAAQT,KAAKU,aAAa,SAAWV,KAAKG,aAAa,SAASQ,MAAM,KAAO,GACnF,IAAK,MAAMC,KAAQH,EAAO,CACtB,MAAOI,EAAKC,GAAQF,EAAKD,MAAM,UACPI,IAApBf,KAAKI,MAAMS,GAIfb,KAAKQ,OAAOM,GAAQd,KAAKI,MAAMS,GAH3BG,QAAQC,KAAK,0CAA2CJ,EAAKb,KAAKI,OAM1E,MAAMc,EAASlB,KAAKG,aAAa,UAAUQ,MAAM,KACjD,IAAK,MAAMQ,KAASD,EAAQ,CACxB,MAAOE,EAAWC,EAASC,GAAcH,EAAMR,MAAM,KAC/CY,EAAIvB,KAAKQ,OAAOa,QACZN,IAANQ,GAIJvB,KAAKC,OAAOkB,GAAS,CAACK,IAElB,IAAIC,EAAQD,EAAEhB,OAAOiB,WAEFV,IAAfO,EACAG,EAAQD,EAAEE,OACe,UAAlBF,EAAEhB,OAAOmB,MAAsC,aAAlBH,EAAEhB,OAAOmB,OAC7CF,EAAQD,EAAEhB,OAAOoB,SAEJ,mBAANL,EACPA,EAAEE,GAEFzB,KAAKQ,OAAOa,GAAWI,IAE/BzB,KAAKI,MAAMyB,iBAAiBT,EAAWpB,KAAKC,OAAOkB,KAjB/CH,QAAQC,KAAK,0CAA2CI,EAASE,IAoB7EzB,uBACI,IAAK,MAAMqB,KAASW,OAAOC,KAAK/B,KAAKC,QAAS,CAC1C,MAAOmB,EAAWC,GAAWF,EAAMR,MAAM,KACzCX,KAAKI,MAAM4B,oBAAoBZ,EAAWpB,KAAKC,OAAOkB,IAE1DnB,KAAKC,OAAS"}