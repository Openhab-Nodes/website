window.customElements.define("bind-input",class extends HTMLElement{constructor(){super(),this.binder={}}async connectedCallback(){this.inputid=this.getAttribute("inputid"),this.input=document.getElementById(this.inputid),this.targetid=this.getAttribute("targetid"),this.target=document.getElementById(this.targetid);const t=this.hasAttribute("props")?this.getAttribute("props").split(","):[];for(const e of t){const[t,i]=e.split(":");void 0!==this.input[t]?this.target[i]=this.input[t]:console.warn("Source does not have property with name",t,this.input)}const e=this.getAttribute("events").split(",");for(const t of e){const[e,i,s]=t.split(":"),n=this.target[i];void 0!==n?(this.binder[t]=(t=>{let e=t.target.value;void 0!==s?e=t.detail:"radio"!==t.target.type&&"checkbox"!==t.target.type||(e=t.target.checked),"function"==typeof n?n(e):this.target[i]=e}),this.input.addEventListener(e,this.binder[t])):console.warn("Target does not have property with name",i,n)}}disconnectedCallback(){for(const t of Object.keys(this.binder)){const[e,i]=t.split(":");this.input.removeEventListener(e,this.binder[t])}this.binder={}}});
//# sourceMappingURL=bind-to-input.js.map
